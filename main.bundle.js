(()=>{"use strict";const e=()=>{const e=document.getElementById("canvas-webGL2"),t=e.getContext("webgl2"),r=t.createShader(t.VERTEX_SHADER);t.shaderSource(r,"#version 300 es\nin vec4 a_position;\nout vec4 out_color;\n\nvoid main(){\n    gl_Position = a_position;\n    out_color = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"),t.compileShader(r);let n=t.getShaderParameter(r,t.COMPILE_STATUS);n||console.log(t.getShaderInfoLog(r));const o=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(o,"#version 300 es\nprecision highp float;\nin vec4 out_color;\nout vec4 outColor;\n\nvoid main(){\n    outColor = out_color;\n}\n"),t.compileShader(o),n=t.getShaderParameter(o,t.COMPILE_STATUS),n||console.log(t.getShaderInfoLog(o));const a=t.createProgram();t.attachShader(a,r),t.attachShader(a,o),t.linkProgram(a),n=t.getProgramParameter(a,t.LINK_STATUS),n||console.log(t.getProgramInfoLog(a));const i=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-.5,-.5,0,.5,.5,-.5]),t.STATIC_DRAW);const u=t.getAttribLocation(a,"a_position"),l=t.createVertexArray();t.bindVertexArray(l),t.enableVertexAttribArray(u);const s=t.FLOAT;t.vertexAttribPointer(u,2,s,!1,0,0);const c=e.clientWidth,d=e.clientHeight;(e.width!==c||e.height!==d)&&(e.width=c,e.height=d),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(1,1,1,1),t.clear(t.COLOR_BUFFER_BIT),t.useProgram(a);const v=t.TRIANGLES;t.drawArrays(v,0,3)},t="struct Ouput{\r\n    @builtin(position) Position: vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(0) pos: vec4<f32>) -> Ouput{\r\n    var position = pos;\r\n\r\n    var color = vec4<f32>(0.0,0.0,1.0,1.0);\r\n\r\n    var output: Ouput;\r\n    output.Position = position;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n@fragment\r\nfn fs_main(@location(0) vColor:vec4<f32>) -> @location(0) vec4<f32>{\r\n    return vColor;\r\n}",r=(e="canvas-webGL2")=>{const t=document.getElementById(e);return[t.getContext("webgl2"),t]},n=(e,t,r)=>{const n=e.createShader(t);if(e.shaderSource(n,r),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS))return n;console.log(e.getShaderInfoLog(n)),e.deleteShader(n)},o=(e,t,r)=>{const n=e.createProgram();if(e.attachShader(n,t),e.attachShader(n,r),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS))return n;e.deleteProgram(n)},a=e=>{const t=e.clientWidth,r=e.clientHeight,n=e.width!==t||e.height!==r;return n&&(e.width=t,e.height=r),n},i=()=>{const e=r(),t=e[0],i=e[1],u=n(t,t.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec4 a_color; \nout vec4 out_color;\nvoid main(){\n    gl_Position = a_position;\n    out_color = a_color;\n}\n"),l=n(t,t.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n"),s=o(t,l,u),c=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,c),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-.5,-.5,1,0,0,-.5,.5,0,1,0,.5,-.5,0,1,0,-.5,.5,0,1,0,.5,-.5,0,1,0,.5,.5,1,0,0]),t.STATIC_DRAW);const d=t.getAttribLocation(s,"a_position"),v=t.getAttribLocation(s,"a_color"),f=t.createVertexArray();t.bindVertexArray(f),t.enableVertexAttribArray(d);let m=2,g=t.FLOAT,p=!1,h=20,E=0;t.vertexAttribPointer(d,m,g,p,h,E),t.enableVertexAttribArray(d),m=3,g=t.FLOAT,p=!1,h=20,E=8,t.vertexAttribPointer(v,m,g,p,h,E),t.enableVertexAttribArray(v),a(i),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(1,1,1,1),t.clear(t.COLOR_BUFFER_BIT),t.useProgram(s);const A=t.TRIANGLES;t.drawArrays(A,0,6)},u="//vertex shader\r\nstruct Ouput{\r\n    @builtin(position) Position: vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(1) pos: vec4<f32>, @location(2) col: vec4<f32>) -> Ouput{\r\n    var position = pos;\r\n    var color = col;\r\n\r\n    var output: Ouput;\r\n    output.Position = position;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n//fragment shader\r\n@fragment\r\nfn fs_main(@location(0) vColor:vec4<f32>) -> @location(0) vec4<f32>{\r\n    return vColor;\r\n}",l=async(e="canvas-webGPU")=>{var t;const r=(()=>{let e="";return navigator.gpu||(e="Your current browser does not support WebGPU"),e})();let n=document.createElement("div"),o=document.createElement("div");if(n=document.getElementById("fps-container"),o=document.getElementById("controls-container"),""!==r){const e=document.getElementById("webGPU");e&&(e.innerHTML="<h2>Your browser does not support WebGPU!<h2>"),n.style.display="none",o.style.display="none"}const a=document.getElementById(e),i=await(null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter()),u=await(null==i?void 0:i.requestDevice()),l=a.getContext("webgpu"),s=a.clientWidth,c=a.clientHeight;(a.width!==s||a.height!==c)&&(a.width=s,a.height=c);const d=await navigator.gpu.getPreferredCanvasFormat();return l.configure({alphaMode:"premultiplied",device:u,format:d}),{device:u,canvas:a,format:d,context:l}},s=(e,t,r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const n=e.createBuffer({size:t.byteLength,usage:r,mappedAtCreation:!0});return r===GPUBufferUsage.VERTEX?new Float32Array(n.getMappedRange()).set(t):new Uint32Array(n.getMappedRange()).set(t),n.unmap(),n},c="//vertex shader\r\nstruct Ouput{\r\n    @builtin(position) Position: vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(1) pos: vec4<f32>, @location(2) col: vec4<f32>) -> Ouput{\r\n    var position = pos;\r\n    var color = col;\r\n\r\n    var output: Ouput;\r\n    output.Position = position;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n//fragment shader\r\n@fragment\r\nfn fs_main(@location(0) vColor:vec4<f32>) -> @location(0) vec4<f32>{\r\n    return vColor;\r\n}",d=()=>{const e=r(),t=e[0],i=e[1],u=n(t,t.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec4 a_color;\nout vec4 out_color;\nvoid main(){\n    gl_Position = a_position;\n    out_color = a_color;\n}\n"),l=n(t,t.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n"),s=o(t,l,u),c=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,c),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-.5,-.5,1,0,0,-.5,.5,0,0,1,.5,-.5,0,0,1,.5,.5,1,0,0]),t.STATIC_DRAW);const d=t.getAttribLocation(s,"a_position"),v=t.getAttribLocation(s,"a_color"),f=t.createVertexArray();t.bindVertexArray(f),t.enableVertexAttribArray(d);let m=2,g=t.FLOAT,p=!1,h=20,E=0;t.vertexAttribPointer(d,m,g,p,h,E),t.enableVertexAttribArray(d),m=3,g=t.FLOAT,p=!1,h=20,E=8,t.vertexAttribPointer(v,m,g,p,h,E),t.enableVertexAttribArray(v);const A=t.createBuffer();t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,A),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,3,1,2]),t.STATIC_DRAW),a(i),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(1,1,1,1),t.clear(t.COLOR_BUFFER_BIT),t.useProgram(s);const _=t.TRIANGLES;let T=t.UNSIGNED_SHORT;t.drawElements(_,6,T,0)},v="// vertex shader\n\nstruct Uniforms {\n    mvpMatrix : mat4x4<f32>\n};\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vColor : vec4<f32>\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n    var output: Output;\n    output.Position = uniforms.mvpMatrix * pos;\n    output.vColor = color;\n    return output;\n}\n\n// fragment shader\n\n @fragment\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n    return vColor;\n}",f=[-1,-1,1,0,0,1,1,-1,1,1,0,1,1,1,1,1,1,1,-1,1,1,0,1,1,-1,-1,-1,0,0,0,1,-1,-1,1,0,0,1,1,-1,1,1,0,-1,1,-1,0,1,0],m=[0,1,2,2,3,0,1,5,6,6,2,1,4,7,6,6,5,4,0,3,7,7,4,0,3,2,6,6,7,3,0,4,5,5,1,0],g=[-1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1],p=[0,1,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1],h=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1];var E=1e-6,A="undefined"!=typeof Float32Array?Float32Array:Array;function _(){var e=new A(16);return A!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function T(e,t,r){var n=t[0],o=t[1],a=t[2],i=t[3],u=t[4],l=t[5],s=t[6],c=t[7],d=t[8],v=t[9],f=t[10],m=t[11],g=t[12],p=t[13],h=t[14],E=t[15],A=r[0],_=r[1],T=r[2],b=r[3];return e[0]=A*n+_*u+T*d+b*g,e[1]=A*o+_*l+T*v+b*p,e[2]=A*a+_*s+T*f+b*h,e[3]=A*i+_*c+T*m+b*E,A=r[4],_=r[5],T=r[6],b=r[7],e[4]=A*n+_*u+T*d+b*g,e[5]=A*o+_*l+T*v+b*p,e[6]=A*a+_*s+T*f+b*h,e[7]=A*i+_*c+T*m+b*E,A=r[8],_=r[9],T=r[10],b=r[11],e[8]=A*n+_*u+T*d+b*g,e[9]=A*o+_*l+T*v+b*p,e[10]=A*a+_*s+T*f+b*h,e[11]=A*i+_*c+T*m+b*E,A=r[12],_=r[13],T=r[14],b=r[15],e[12]=A*n+_*u+T*d+b*g,e[13]=A*o+_*l+T*v+b*p,e[14]=A*a+_*s+T*f+b*h,e[15]=A*i+_*c+T*m+b*E,e}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});const b=(e=1,t=[0,0,4],r=[0,0,0],n=[0,1,0])=>{const o=_(),a=_(),i=_();var u,l,s,c,d,v,f,m,g,p,h,A,b,y,x,w,R,P,U,B,L,S,G;return function(e,t,r,n,o){var a,i=1/Math.tan(t/2);e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=o&&o!==1/0?(a=1/(n-o),e[10]=(o+n)*a,e[14]=2*o*n*a):(e[10]=-1,e[14]=-2*n)}(a,2*Math.PI/5,e,.1,1e3),u=o,s=r,c=n,x=(l=t)[0],w=l[1],R=l[2],P=c[0],U=c[1],B=c[2],L=s[0],S=s[1],G=s[2],Math.abs(x-L)<E&&Math.abs(w-S)<E&&Math.abs(R-G)<E?function(e){e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(u):(h=x-L,A=w-S,b=R-G,d=U*(b*=y=1/Math.hypot(h,A,b))-B*(A*=y),v=B*(h*=y)-P*b,f=P*A-U*h,(y=Math.hypot(d,v,f))?(d*=y=1/y,v*=y,f*=y):(d=0,v=0,f=0),m=A*f-b*v,g=b*d-h*f,p=h*v-A*d,(y=Math.hypot(m,g,p))?(m*=y=1/y,g*=y,p*=y):(m=0,g=0,p=0),u[0]=d,u[1]=m,u[2]=h,u[3]=0,u[4]=v,u[5]=g,u[6]=A,u[7]=0,u[8]=f,u[9]=p,u[10]=b,u[11]=0,u[12]=-(d*x+v*w+f*R),u[13]=-(m*x+g*w+p*R),u[14]=-(h*x+A*w+b*R),u[15]=1),T(i,a,o),{viewMatrix:o,projectionMatrix:a,viewProjectionMatrix:i,cameraOption:{eye:t,center:r,zoomMax:100,zoomSpeed:2}}},y=(e,t=[0,0,0],r=[0,0,0],n=[1,1,1])=>{const o=_(),a=_(),i=_(),u=_(),l=_();var s,c;c=t,(s=u)[0]=1,s[1]=0,s[2]=0,s[3]=0,s[4]=0,s[5]=1,s[6]=0,s[7]=0,s[8]=0,s[9]=0,s[10]=1,s[11]=0,s[12]=c[0],s[13]=c[1],s[14]=c[2],s[15]=1,function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=r,e[7]=0,e[8]=0,e[9]=-r,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(o,r[0]),function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=n,e[1]=0,e[2]=-r,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=r,e[9]=0,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(a,r[1]),function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=n,e[1]=r,e[2]=0,e[3]=0,e[4]=-r,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(i,r[2]),function(e,t){e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(l,n),T(e,o,l),T(e,a,e),T(e,i,e),T(e,u,e)},x="#version 300 es\nin vec4 a_position;\nin vec4 a_color;\nuniform mat4 u_matrix;\nout vec4 out_color;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    out_color = a_color;\n}\n",w="#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n",R=(e,t,r,n)=>{const o=e.createBuffer();return e.bindBuffer(r,o),e.bufferData(r,r===e.ARRAY_BUFFER?new Float32Array(t):new Uint16Array(t),n),o},P=(e,t,r,n,o,a,i,u)=>{const l=e.getAttribLocation(t,r);e.vertexAttribPointer(l,n,o,a,i,u),e.enableVertexAttribArray(l)},U=()=>{const e=r(),t=e[0],i=e[1],u=n(t,t.VERTEX_SHADER,x),l=n(t,t.FRAGMENT_SHADER,w),s=o(t,l,u);t.useProgram(s),R(t,f,t.ARRAY_BUFFER,t.STATIC_DRAW);const c=t.createVertexArray();t.bindVertexArray(c),P(t,s,"a_position",3,t.FLOAT,!1,24,0),P(t,s,"a_color",3,t.FLOAT,!1,24,12);const d=m;R(t,d,t.ELEMENT_ARRAY_BUFFER,t.STATIC_DRAW),a(i);const v=_(),g=_();let p=_();p=b(i.width/i.height).viewProjectionMatrix,y(v,[0,0,-2],[-2.44,.46,0]),T(g,p,v);const h=t.getUniformLocation(s,"u_matrix");t.uniformMatrix4fv(h,!1,g),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(1,1,1,1),t.enable(t.DEPTH_TEST),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);const E=t.TRIANGLES,A=d.length;let U=t.UNSIGNED_SHORT;t.drawElements(E,A,U,0)},B="// vertex shader\n\nstruct Uniforms {\n    mvpMatrix : mat4x4<f32>\n};\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vColor : vec4<f32>\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n    var output: Output;\n    output.Position = uniforms.mvpMatrix * pos;\n    output.vColor = color;\n    return output;\n}\n\n// fragment shader\n\n @fragment\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n    return vColor;\n}",L="#version 300 es\nin vec4 a_position;\nin vec4 a_color;\nuniform mat4 u_matrix;\nout vec4 out_color;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    out_color = a_color;\n}\n",S="#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n",G=()=>{const e=r(),t=e[0],i=e[1],u=n(t,t.VERTEX_SHADER,L),l=n(t,t.FRAGMENT_SHADER,S),s=o(t,l,u);t.useProgram(s);const c=t.createVertexArray();t.bindVertexArray(c);const d=g;R(t,d,t.ARRAY_BUFFER,t.STATIC_DRAW),P(t,s,"a_position",3,t.FLOAT,!1,12,0),R(t,h,t.ARRAY_BUFFER,t.STATIC_DRAW),P(t,s,"a_color",3,t.FLOAT,!1,12,0),a(i);const v=_(),f=_();let m=_();m=b(i.width/i.height).viewProjectionMatrix,y(v,[0,0,-2],[-2.44,.46,0]),T(f,m,v);const p=t.getUniformLocation(s,"u_matrix");t.uniformMatrix4fv(p,!1,f),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(1,1,1,1),t.enable(t.DEPTH_TEST),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);const E=t.TRIANGLES;t.drawArrays(E,0,d.length)},I="// vertex shader\n\nstruct Uniforms {\n    mvpMatrix : mat4x4<f32>\n};\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vTextureCoord : vec2<f32>\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) textureCoord: vec2<f32>) -> Output {\n    var output: Output;\n    output.Position = uniforms.mvpMatrix * pos;\n    output.vTextureCoord = textureCoord;\n    return output;\n}\n\n// fragment shader\n@binding(1) @group(0) var textureSampler : sampler;\n@binding(2) @group(0) var textureData : texture_2d<f32>;\n @fragment\nfn fs_main(@location(0) vTextureCoord: vec2<f32>) -> @location(0) vec4<f32> {\n    let color: vec4<f32> = (textureSample(textureData, textureSampler, vTextureCoord)).rgba;\n    return color;\n}",F=()=>{const e=r(),t=e[0],i=e[1],u=n(t,t.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec2 a_texcoord;\nuniform mat4 u_matrix;\n\nout vec2 v_texcoord;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    v_texcoord = a_texcoord;\n}\n"),l=n(t,t.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec2 v_texcoord;\nout vec4 outColor;\n\nuniform sampler2D u_texture;\nvoid main(){\n    outColor = texture(u_texture, v_texcoord);\n}\n"),s=o(t,l,u);t.useProgram(s);const c=t.createVertexArray();t.bindVertexArray(c);const d=g;R(t,d,t.ARRAY_BUFFER,t.STATIC_DRAW),P(t,s,"a_position",3,t.FLOAT,!1,12,0),R(t,p,t.ARRAY_BUFFER,t.STATIC_DRAW),P(t,s,"a_texcoord",2,t.FLOAT,!0,0,0),a(i);const v=t.createTexture();t.activeTexture(t.TEXTURE0+0),t.bindTexture(t.TEXTURE_2D,v),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,new Uint8Array([0,255,0,255]));var f=new Image;f.crossOrigin="anonymous",f.src="./assets/webgl_single_texture.png",f.addEventListener("load",(function(){t.bindTexture(t.TEXTURE_2D,v),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,f),t.generateMipmap(t.TEXTURE_2D)}));const m=_(),h=_();let E=_();E=b(i.width/i.height).viewProjectionMatrix,y(m,[0,0,-2],[-2.44,.46,0]),T(h,E,m);const A=t.getUniformLocation(s,"u_matrix");t.uniformMatrix4fv(A,!1,h);const x=()=>{t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(0,0,0,0),t.enable(t.DEPTH_TEST),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.enable(t.CULL_FACE);const e=t.TRIANGLES;t.drawArrays(e,0,d.length),requestAnimationFrame(x)};requestAnimationFrame(x)},C=()=>{var e,t,i,u,l,s,c,d,v,E;const A=r(),U=A[0],B=A[1];let G,I,F,C,M;const O=U.createVertexArray();U.bindVertexArray(O);let D="texture";const V=()=>{switch(D){case"texture":G=n(U,U.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec2 a_texcoord;\nuniform mat4 u_matrix;\n\nout vec2 v_texcoord;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    v_texcoord = a_texcoord;\n}\n"),I=n(U,U.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec2 v_texcoord;\nout vec4 outColor;\n\nuniform sampler2D u_texture;\nvoid main(){\n    outColor = texture(u_texture, v_texcoord);\n}\n"),F=o(U,I,G),U.useProgram(F),M=g,C=M.length,R(U,M,U.ARRAY_BUFFER,U.STATIC_DRAW),P(U,F,"a_position",3,U.FLOAT,!1,12,0),R(U,p,U.ARRAY_BUFFER,U.STATIC_DRAW),P(U,F,"a_texcoord",2,U.FLOAT,!0,0,0);const e=U.createTexture();U.activeTexture(U.TEXTURE0+0),U.bindTexture(U.TEXTURE_2D,e),U.texImage2D(U.TEXTURE_2D,0,U.RGBA,1,1,0,U.RGBA,U.UNSIGNED_BYTE,new Uint8Array([0,255,0,255]));const t=new Image;t.crossOrigin="anonymous",t.src="./assets/webgl_single_texture.png",t.addEventListener("load",(function(){U.bindTexture(U.TEXTURE_2D,e),U.texImage2D(U.TEXTURE_2D,0,U.RGBA,U.RGBA,U.UNSIGNED_BYTE,t),U.generateMipmap(U.TEXTURE_2D),requestAnimationFrame(re)}));break;case"distinct-vertex-colors":G=n(U,U.VERTEX_SHADER,x),I=n(U,U.FRAGMENT_SHADER,w),F=o(U,I,G),U.useProgram(F),M=f,C=m.length,R(U,M,U.ARRAY_BUFFER,U.STATIC_DRAW),R(U,m,U.ELEMENT_ARRAY_BUFFER,U.STATIC_DRAW),P(U,F,"a_position",3,U.FLOAT,!1,24,0),P(U,F,"a_color",3,U.FLOAT,!1,24,12);break;case"distinct-face-colors":G=n(U,U.VERTEX_SHADER,L),I=n(U,U.FRAGMENT_SHADER,S),F=o(U,I,G),U.useProgram(F),C=g.length,R(U,g,U.ARRAY_BUFFER,U.STATIC_DRAW),P(U,F,"a_position",3,U.FLOAT,!1,12,0),R(U,h,U.ARRAY_BUFFER,U.STATIC_DRAW),P(U,F,"a_color",3,U.FLOAT,!1,12,0);break;default:return 0}};V(),a(B);const N=_(),X=_();let H=_();const Y=b(B.width/B.height);H=Y.viewProjectionMatrix;let q=0,W=0,z=0,k=1,j=1,K=1,J=0,Q=0,Z=0;null===(e=document.getElementById("translate-x"))||void 0===e||e.addEventListener("input",(e=>{var t;q=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(t=document.getElementById("translate-y"))||void 0===t||t.addEventListener("input",(e=>{var t;W=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(i=document.getElementById("translate-z"))||void 0===i||i.addEventListener("input",(e=>{var t;z=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(u=document.getElementById("scale-x"))||void 0===u||u.addEventListener("input",(e=>{var t;k=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(l=document.getElementById("scale-y"))||void 0===l||l.addEventListener("input",(e=>{var t;j=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(s=document.getElementById("scale-z"))||void 0===s||s.addEventListener("input",(e=>{var t;K=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(c=document.getElementById("rotate-x"))||void 0===c||c.addEventListener("input",(e=>{var t;J=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(d=document.getElementById("rotate-y"))||void 0===d||d.addEventListener("input",(e=>{var t;Q=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(v=document.getElementById("rotate-z"))||void 0===v||v.addEventListener("input",(e=>{var t;Z=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(E=document.getElementById("material"))||void 0===E||E.addEventListener("change",(e=>{var t;D=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value,V()})),window.addEventListener("resize",(()=>a(B)));let $=document.createElement("div");$=document.getElementById("fps");let ee=1;const te=[],re=e=>{for(;te.length>0&&te[0]<=e-1e3;)te.shift();te.push(e),ee=te.length,$.innerText=ee.toString(),y(N,[q,W,z],[J,Q,Z],[k,j,K]),T(X,H,N);const t=U.getUniformLocation(F,"u_matrix");U.uniformMatrix4fv(t,!1,X),U.clearColor(0,0,0,0),U.clear(U.COLOR_BUFFER_BIT|U.DEPTH_BUFFER_BIT),U.viewport(0,0,U.canvas.width,U.canvas.height),U.enable(U.DEPTH_TEST),U.enable(U.CULL_FACE);const r=U.TRIANGLES;if("distinct-vertex-colors"==D){let e=U.UNSIGNED_SHORT;U.drawElements(r,C,e,0)}else U.drawArrays(r,0,C);requestAnimationFrame(re)};requestAnimationFrame(re)},M=e=>{const t=document.getElementById(e);null==t||t.childNodes.forEach((e=>{"CANVAS"===e.nodeName&&e.remove()}))},O=e=>{let t=!0;const r=document.getElementById(e);if(null==r||r.childNodes.forEach((e=>{"CANVAS"===e.nodeName&&(t=!1)})),t){const t=document.createElement("canvas");t.id="canvas-"+e,r.appendChild(t)}},D=document.getElementById("webGPUTab-triangle");null==D||D.addEventListener("click",(async()=>{M("webGL2"),O("webGPU"),await(async()=>{var e;if(!navigator.gpu){const e=document.getElementById("webGPU");e&&(e.innerHTML="<h2>Your browser does not support WebGPU!<h2>")}const r=document.getElementById("canvas-webGPU"),n=await(null===(e=navigator.gpu)||void 0===e?void 0:e.requestAdapter()),o=await(null==n?void 0:n.requestDevice()),a=r.getContext("webgpu");a.configure({alphaMode:"premultiplied",device:o,format:await navigator.gpu.getPreferredCanvasFormat()});const i=r.clientWidth,u=r.clientHeight;(r.width!==i||r.height!==u)&&(r.width=i,r.height=u);const l=new Float32Array([-.5,-.5,0,.5,.5,-.5]),s=o.createBuffer({size:l.byteLength,usage:GPUBufferUsage.VERTEX,mappedAtCreation:!0});let c;new Float32Array(s.getMappedRange()).set(l),s.unmap(),c=o.createRenderPipeline({vertex:{module:o.createShaderModule({code:t}),entryPoint:"vs_main",buffers:[{arrayStride:8,attributes:[{shaderLocation:0,format:"float32x2",offset:0}]}]},fragment:{module:o.createShaderModule({code:t}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},layout:o.createPipelineLayout({bindGroupLayouts:[]})});const d=o.createCommandEncoder(),v=a.getCurrentTexture().createView(),f=d.beginRenderPass({colorAttachments:[{view:v,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}]});f.setPipeline(c),f.setVertexBuffer(0,s),f.draw(3,1,0,0),f.end(),o.queue.submit([d.finish()])})()}));const V=document.getElementById("webGL2Tab-triangle");null==V||V.addEventListener("click",(async()=>{M("webGPU"),O("webGL2"),e()})),null!==V&&e();const N=document.getElementById("webGPUTab-square");null==N||N.addEventListener("click",(async()=>{M("webGL2"),O("webGPU"),await(async()=>{const e=await l(),t=e.device,r=e.context,n=new Float32Array([-.5,-.5,0,0,1,-.5,.5,0,1,0,.5,-.5,0,1,0,-.5,.5,0,1,0,.5,-.5,0,1,0,.5,.5,0,0,1]),o=s(t,n,GPUBufferUsage.VERTEX);let a=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:u}),entryPoint:"vs_main",buffers:[{arrayStride:20,attributes:[{shaderLocation:1,format:"float32x2",offset:0},{shaderLocation:2,format:"float32x3",offset:8}]}]},fragment:{module:t.createShaderModule({code:u}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},layout:t.createPipelineLayout({bindGroupLayouts:[]})});const i=t.createCommandEncoder(),c=r.getCurrentTexture().createView(),d=i.beginRenderPass({colorAttachments:[{view:c,clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});d.setPipeline(a),d.setVertexBuffer(0,o),d.draw(6,1,0,0),d.end(),t.queue.submit([i.finish()])})()}));const X=document.getElementById("webGL2Tab-square");null==X||X.addEventListener("click",(async()=>{M("webGPU"),O("webGL2"),i()})),null!==X&&i();const H=document.getElementById("webGPUTab-square-with-indexed-vertices");null==H||H.addEventListener("click",(async()=>{M("webGL2"),O("webGPU"),await(async()=>{const e=await l(),t=e.device,r=e.context,n=new Float32Array([-.5,-.5,0,0,1,-.5,.5,1,0,0,.5,-.5,1,0,0,.5,.5,0,0,1]),o=s(t,n,GPUBufferUsage.VERTEX),a=new Uint32Array([0,1,2,3,2,1]),i=t.createBuffer({size:a.byteLength,usage:GPUBufferUsage.INDEX,mappedAtCreation:!0});new Uint32Array(i.getMappedRange()).set(a),i.unmap();let u=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:c}),entryPoint:"vs_main",buffers:[{arrayStride:20,attributes:[{shaderLocation:1,format:"float32x2",offset:0},{shaderLocation:2,format:"float32x3",offset:8}]}]},fragment:{module:t.createShaderModule({code:c}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},layout:t.createPipelineLayout({bindGroupLayouts:[]})});const d=t.createCommandEncoder(),v=r.getCurrentTexture().createView(),f=d.beginRenderPass({colorAttachments:[{view:v,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}]});f.setPipeline(u),f.setVertexBuffer(0,o),f.setIndexBuffer(i,"uint32"),f.drawIndexed(6,1,0,0),f.end(),t.queue.submit([d.finish()])})()}));const Y=document.getElementById("webGL2Tab-square-with-indexed-vertices");null==Y||Y.addEventListener("click",(async()=>{M("webGPU"),O("webGL2"),d()})),null!==Y&&d(),null!==X&&i();const q=document.getElementById("webGPUTab-cube-with-distinct-face-colors");null==q||q.addEventListener("click",(async()=>{M("webGL2"),O("webGPU"),await(async()=>{const e=await l(),t=e.device,r=new Float32Array(g),n=new Float32Array(h),o=s(t,r,GPUBufferUsage.VERTEX),a=s(t,n,GPUBufferUsage.VERTEX),i=r.length,u=t.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{type:"uniform"}}]});let c=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:B}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:t.createShaderModule({code:B}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:t.createPipelineLayout({bindGroupLayouts:[u]})});const d=t.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),v=t.createBindGroup({layout:c.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:d,offset:0,size:64}}]}),f=_(),m=_();let p=_();p=b(e.canvas.width/e.canvas.height).viewProjectionMatrix,y(f,[0,0,-2],[2.44,-.46,0]),T(m,p,f),t.queue.writeBuffer(d,0,m);const E=t.createCommandEncoder(),A=e.context.getCurrentTexture().createView(),x=t.createTexture({size:[e.canvas.width,e.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),w=E.beginRenderPass({colorAttachments:[{view:A,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:x.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}});w.setPipeline(c),w.setVertexBuffer(0,o),w.setVertexBuffer(1,a),w.setBindGroup(0,v),w.draw(i/3),w.end(),t.queue.submit([E.finish()])})()}));const W=document.getElementById("webGL2Tab-cube-with-distinct-face-colors");null==W||W.addEventListener("click",(async()=>{M("webGPU"),O("webGL2"),G()})),null!==W&&G(),null!==X&&i();const z=document.getElementById("webGPUTab-cube-with-distinct-vertex-colors");null==z||z.addEventListener("click",(async()=>{M("webGL2"),O("webGPU"),await(async()=>{const e=await l(),t=e.device,r=new Float32Array(f),n=s(t,r,GPUBufferUsage.VERTEX),o=new Uint32Array(m),a=o.length,i=s(t,o,GPUBufferUsage.INDEX),u=t.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{type:"uniform"}}]});let c=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:v}),entryPoint:"vs_main",buffers:[{arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}]},fragment:{module:t.createShaderModule({code:v}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:t.createPipelineLayout({bindGroupLayouts:[u]})});const d=t.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),g=t.createBindGroup({layout:c.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:d,offset:0,size:64}}]}),p=_(),h=_();let E=_();E=b(e.canvas.width/e.canvas.height).viewProjectionMatrix,y(p,[0,0,-2],[2.44,-.46,0]),T(h,E,p),t.queue.writeBuffer(d,0,h);const A=t.createCommandEncoder(),x=e.context.getCurrentTexture().createView(),w=t.createTexture({size:[e.canvas.width,e.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),R=A.beginRenderPass({colorAttachments:[{view:x,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:w.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}});R.setPipeline(c),R.setVertexBuffer(0,n),R.setIndexBuffer(i,"uint32"),R.setBindGroup(0,g),R.drawIndexed(a),R.end(),t.queue.submit([A.finish()])})()}));const k=document.getElementById("webGL2Tab-cube-with-distinct-vertex-colors");null==k||k.addEventListener("click",(async()=>{M("webGPU"),O("webGL2"),U()})),null!==k&&U(),null!==X&&i();const j=document.getElementById("webGPUTab-cube-with-texture");null==j||j.addEventListener("click",(async()=>{M("webGL2"),O("webGPU"),await(async()=>{const e=await l(),t=e.device,r=new Float32Array(g),n=new Float32Array(p),o=s(t,r,GPUBufferUsage.VERTEX),a=s(t,n,GPUBufferUsage.VERTEX),i=r.length,u=new Image;u.src="./assets/webgpu_single_texture.png",await u.decode();const c=await createImageBitmap(u),d=t.createTexture({size:[c.width,c.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),v=t.createSampler({minFilter:"linear",magFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"});t.queue.copyExternalImageToTexture({source:c},{texture:d},[c.width,c.height]);let f=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:I}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:8,attributes:[{shaderLocation:1,format:"float32x2",offset:0}]}]},fragment:{module:t.createShaderModule({code:I}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:"auto"});const m=t.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),h=t.createBindGroup({layout:f.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:m,offset:0,size:64}},{binding:1,resource:v},{binding:2,resource:d.createView()}]}),E=_(),A=_();let x=_();x=b(e.canvas.width/e.canvas.height).viewProjectionMatrix,y(E,[0,0,-2],[2.44,-.46,0]),T(A,x,E),t.queue.writeBuffer(m,0,A);const w=t.createCommandEncoder(),R=e.context.getCurrentTexture().createView(),P=t.createTexture({size:[e.canvas.width,e.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),U=w.beginRenderPass({colorAttachments:[{view:R,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:P.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}});U.setPipeline(f),U.setVertexBuffer(0,o),U.setVertexBuffer(1,a),U.setBindGroup(0,h),U.draw(i/3),U.end(),t.queue.submit([w.finish()])})()}));const K=document.getElementById("webGL2Tab-cube-with-texture");null==K||K.addEventListener("click",(async()=>{M("webGPU"),O("webGL2"),F()})),null!==K&&F(),null!==X&&i();const J=document.getElementById("webGPUTab-interactive-cube");null==J||J.addEventListener("click",(async()=>{M("webGL2"),O("webGPU"),await(async()=>{var e,t,r,n,o,a,i,u,c,d;const E=await l(),A="bgra8unorm",x=E.device;let w,R,P,U,L,S,G,F,C,M,O=0,D="texture";const V=x.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),N=async()=>{switch(D){case"texture":w=new Float32Array(g),R=new Float32Array(p),U=s(x,w,GPUBufferUsage.VERTEX),L=s(x,R,GPUBufferUsage.VERTEX),O=w.length/3;const e=new Image;e.src="./assets/webgpu_single_texture.png",await e.decode();const t=await createImageBitmap(e),r=x.createTexture({size:[t.width,t.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),n=x.createSampler({minFilter:"linear",magFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"});x.queue.copyExternalImageToTexture({source:t},{texture:r},[t.width,t.height]),C=x.createRenderPipeline({vertex:{module:x.createShaderModule({code:I}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:8,attributes:[{shaderLocation:1,format:"float32x2",offset:0}]}]},fragment:{module:x.createShaderModule({code:I}),entryPoint:"fs_main",targets:[{format:A}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:"auto"}),M=x.createBindGroup({layout:C.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:V,offset:0,size:64}},{binding:1,resource:n},{binding:2,resource:r.createView()}]});break;case"distinct-vertex-colors":w=new Float32Array(f),U=s(x,w,GPUBufferUsage.VERTEX),F=new Uint32Array(m),O=F.length,G=s(x,F,GPUBufferUsage.INDEX),C=x.createRenderPipeline({vertex:{module:x.createShaderModule({code:v}),entryPoint:"vs_main",buffers:[{arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}]},fragment:{module:x.createShaderModule({code:v}),entryPoint:"fs_main",targets:[{format:A}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:"auto"}),M=x.createBindGroup({layout:C.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:V,offset:0,size:64}}]});break;case"distinct-face-colors":w=new Float32Array(g),P=new Float32Array(h),U=s(x,w,GPUBufferUsage.VERTEX),S=s(x,P,GPUBufferUsage.VERTEX),O=w.length/3,G=s(x,F,GPUBufferUsage.INDEX),C=x.createRenderPipeline({vertex:{module:x.createShaderModule({code:B}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:x.createShaderModule({code:B}),entryPoint:"fs_main",targets:[{format:A}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:"auto"}),M=x.createBindGroup({layout:C.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:V,offset:0,size:64}}]});break;default:return}};await N();let X=0,H=0,Y=0,q=1,W=1,z=1,k=0,j=0,K=0;null===(e=document.getElementById("translate-x"))||void 0===e||e.addEventListener("input",(e=>{var t;X=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(t=document.getElementById("translate-y"))||void 0===t||t.addEventListener("input",(e=>{var t;H=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(r=document.getElementById("translate-z"))||void 0===r||r.addEventListener("input",(e=>{var t;Y=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(n=document.getElementById("scale-x"))||void 0===n||n.addEventListener("input",(e=>{var t;q=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(o=document.getElementById("scale-y"))||void 0===o||o.addEventListener("input",(e=>{var t;W=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(a=document.getElementById("scale-z"))||void 0===a||a.addEventListener("input",(e=>{var t;z=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(i=document.getElementById("rotate-x"))||void 0===i||i.addEventListener("input",(e=>{var t;k=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(u=document.getElementById("rotate-y"))||void 0===u||u.addEventListener("input",(e=>{var t;j=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(c=document.getElementById("rotate-z"))||void 0===c||c.addEventListener("input",(e=>{var t;K=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(d=document.getElementById("material"))||void 0===d||d.addEventListener("change",(async e=>{var t;D=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value,await N()}));let J=E.context.getCurrentTexture().createView();const Q=x.createTexture({size:[E.canvas.width,E.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),Z={colorAttachments:[{view:J,clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:Q.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}};let $=document.createElement("div");$=document.getElementById("fps");let ee=1;const te=[],re=e=>{for(;te.length>0&&te[0]<=e-1e3;)te.shift();te.push(e),ee=te.length,$.innerText=ee.toString(),J=E.context.getCurrentTexture().createView(),Z.colorAttachments[0].view=J;const t=x.createCommandEncoder(),r=t.beginRenderPass(Z),n=_(),o=_();let a=_();a=b(E.canvas.width/E.canvas.height).viewProjectionMatrix,y(n,[X,H,Y],[k,j,K],[q,W,z]),T(o,a,n),x.queue.writeBuffer(V,0,o),r.setPipeline(C),r.setVertexBuffer(0,U),"distinct-vertex-colors"===D?(r.setIndexBuffer(G,"uint32"),r.setBindGroup(0,M),r.drawIndexed(O)):("distinct-face-colors"===D?r.setVertexBuffer(1,S):r.setVertexBuffer(1,L),r.setBindGroup(0,M),r.draw(O)),r.end(),x.queue.submit([t.finish()]),requestAnimationFrame(re)};requestAnimationFrame(re)})()}));const Q=document.getElementById("webGL2Tab-interactive-cube");null==Q||Q.addEventListener("click",(async()=>{M("webGPU"),O("webGL2"),C()})),null!==Q&&C()})();
//# sourceMappingURL=main.bundle.js.map