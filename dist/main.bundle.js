(()=>{"use strict";const e="struct Ouput{\r\n    @builtin(position) Position: vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(0) pos: vec4<f32>) -> Ouput{\r\n    var position = pos;\r\n\r\n    var color = vec4<f32>(0.0,0.0,1.0,1.0);\r\n\r\n    var output: Ouput;\r\n    output.Position = position;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n@fragment\r\nfn fs_main(@location(0) vColor:vec4<f32>) -> @location(0) vec4<f32>{\r\n    return vColor;\r\n}",t=(e="canvas-webGL2")=>{const t=document.getElementById(e);return[t.getContext("webgl2"),t]},r=(e,t,r)=>{const n=e.createShader(t);if(e.shaderSource(n,r),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS))return n;console.log(e.getShaderInfoLog(n)),e.deleteShader(n)},n=(e,t,r)=>{const n=e.createProgram();if(e.attachShader(n,t),e.attachShader(n,r),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS))return n;e.deleteProgram(n)},o=e=>{const t=e.clientWidth,r=e.clientHeight,n=e.width!==t||e.height!==r;return n&&(e.width=t,e.height=r),n},a=[-1,-1,1,0,0,1,1,-1,1,1,0,1,1,1,1,1,1,1,-1,1,1,0,1,1,-1,-1,-1,0,0,0,1,-1,-1,1,0,0,1,1,-1,1,1,0,-1,1,-1,0,1,0],i=[0,1,2,2,3,0,1,5,6,6,2,1,4,7,6,6,5,4,0,3,7,7,4,0,3,2,6,6,7,3,0,4,5,5,1,0],u=[-1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1],s=[0,1,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1],l=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1];var c=1e-6,d="undefined"!=typeof Float32Array?Float32Array:Array;function f(){var e=new d(16);return d!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function v(e,t,r){var n=t[0],o=t[1],a=t[2],i=t[3],u=t[4],s=t[5],l=t[6],c=t[7],d=t[8],f=t[9],v=t[10],m=t[11],p=t[12],g=t[13],h=t[14],E=t[15],_=r[0],A=r[1],x=r[2],T=r[3];return e[0]=_*n+A*u+x*d+T*p,e[1]=_*o+A*s+x*f+T*g,e[2]=_*a+A*l+x*v+T*h,e[3]=_*i+A*c+x*m+T*E,_=r[4],A=r[5],x=r[6],T=r[7],e[4]=_*n+A*u+x*d+T*p,e[5]=_*o+A*s+x*f+T*g,e[6]=_*a+A*l+x*v+T*h,e[7]=_*i+A*c+x*m+T*E,_=r[8],A=r[9],x=r[10],T=r[11],e[8]=_*n+A*u+x*d+T*p,e[9]=_*o+A*s+x*f+T*g,e[10]=_*a+A*l+x*v+T*h,e[11]=_*i+A*c+x*m+T*E,_=r[12],A=r[13],x=r[14],T=r[15],e[12]=_*n+A*u+x*d+T*p,e[13]=_*o+A*s+x*f+T*g,e[14]=_*a+A*l+x*v+T*h,e[15]=_*i+A*c+x*m+T*E,e}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});const m=(e=1,t=[0,0,4],r=[0,0,0],n=[0,1,0])=>{const o=f(),a=f(),i=f();var u,s,l,d,m,p,g,h,E,_,A,x,T,b,y,R,w,P,B,U,S,F,C;return function(e,t,r,n,o){var a,i=1/Math.tan(t/2);e[0]=i/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=o&&o!==1/0?(a=1/(n-o),e[10]=(o+n)*a,e[14]=2*o*n*a):(e[10]=-1,e[14]=-2*n)}(a,2*Math.PI/5,e,.1,1e3),u=o,l=r,d=n,y=(s=t)[0],R=s[1],w=s[2],P=d[0],B=d[1],U=d[2],S=l[0],F=l[1],C=l[2],Math.abs(y-S)<c&&Math.abs(R-F)<c&&Math.abs(w-C)<c?function(e){e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(u):(A=y-S,x=R-F,T=w-C,m=B*(T*=b=1/Math.hypot(A,x,T))-U*(x*=b),p=U*(A*=b)-P*T,g=P*x-B*A,(b=Math.hypot(m,p,g))?(m*=b=1/b,p*=b,g*=b):(m=0,p=0,g=0),h=x*g-T*p,E=T*m-A*g,_=A*p-x*m,(b=Math.hypot(h,E,_))?(h*=b=1/b,E*=b,_*=b):(h=0,E=0,_=0),u[0]=m,u[1]=h,u[2]=A,u[3]=0,u[4]=p,u[5]=E,u[6]=x,u[7]=0,u[8]=g,u[9]=_,u[10]=T,u[11]=0,u[12]=-(m*y+p*R+g*w),u[13]=-(h*y+E*R+_*w),u[14]=-(A*y+x*R+T*w),u[15]=1),v(i,a,o),{viewMatrix:o,projectionMatrix:a,viewProjectionMatrix:i,cameraOption:{eye:t,center:r,zoomMax:100,zoomSpeed:2}}},p=(e,t=[0,0,0],r=[0,0,0],n=[1,1,1])=>{const o=f(),a=f(),i=f(),u=f(),s=f();var l,c;c=t,(l=u)[0]=1,l[1]=0,l[2]=0,l[3]=0,l[4]=0,l[5]=1,l[6]=0,l[7]=0,l[8]=0,l[9]=0,l[10]=1,l[11]=0,l[12]=c[0],l[13]=c[1],l[14]=c[2],l[15]=1,function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=r,e[7]=0,e[8]=0,e[9]=-r,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(o,r[0]),function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=n,e[1]=0,e[2]=-r,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=r,e[9]=0,e[10]=n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(a,r[1]),function(e,t){var r=Math.sin(t),n=Math.cos(t);e[0]=n,e[1]=r,e[2]=0,e[3]=0,e[4]=-r,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(i,r[2]),function(e,t){e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(s,n),v(e,o,s),v(e,a,e),v(e,i,e),v(e,u,e)},g=(e="fps")=>{let t=document.createElement("div");return t=document.getElementById("fps"),[t,1,[]]},h=(e,t,r,n)=>{for(;t.length>0&&t[0]<=e-1e3;)t.shift();t.push(e),r=t.length,n.innerText=r.toString()},E={show:(e="controls-container")=>{let t=document.createElement("div");t=document.getElementById(e),t.style.display="block",t.innerHTML='\n        <div id="controls-control" data-open="true" class="flex-spaced-between">\n            <p class="no-space">Controls</p>\n            <p class="no-space" id="controls-icon">&#9650;</p>\n        </div>\n        <table  id="controls-body" style="background-color: #e5e8ec; width: 100%;">\n        </table>'},add:(e,t,r,n,o,a="controls-body")=>{const i=document.getElementById(a);if("range"===e){const e=(e=>{const t=document.createElement("label");return t.setAttribute("for",e),t.innerHTML=e,t})(t),a=((e,t,r,n)=>{const o=document.createElement("input");return o.type="range",o.id=t,o.name=t,o.min=r[0],o.max=r[1],o.value=n,o})(0,t,r,n),u=((e,t)=>{const r=document.createElement("tr"),n=document.createElement("td");n.appendChild(e);const o=document.createElement("td");return o.appendChild(t),r.appendChild(n),r.appendChild(o),r})(e,a);null==i||i.appendChild(u),a.addEventListener("input",(e=>{var t;console.log("change"),o(null===(t=e.target)||void 0===t?void 0:t.value)}))}}},_=E,A="//vertex shader\r\nstruct Ouput{\r\n    @builtin(position) Position: vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(1) pos: vec4<f32>, @location(2) col: vec4<f32>) -> Ouput{\r\n    var position = pos;\r\n    var color = col;\r\n\r\n    var output: Ouput;\r\n    output.Position = position;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n//fragment shader\r\n@fragment\r\nfn fs_main(@location(0) vColor:vec4<f32>) -> @location(0) vec4<f32>{\r\n    return vColor;\r\n}",x=async(e="canvas-webGPU")=>{var t;const r=(()=>{let e="";return navigator.gpu||(e="Your current browser does not support WebGPU"),e})();let n=document.createElement("div"),o=document.createElement("div");if(n=document.getElementById("fps-container"),o=document.getElementById("controls-container"),""!==r){const e=document.getElementById("webGPU");e&&(e.innerHTML="<h2>Your browser does not support WebGPU!<h2>"),n.style.display="none",o.style.display="none"}const a=document.getElementById(e),i=await(null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter()),u=await(null==i?void 0:i.requestDevice()),s=a.getContext("webgpu"),l=a.clientWidth,c=a.clientHeight;(a.width!==l||a.height!==c)&&(a.width=l,a.height=c);const d=await navigator.gpu.getPreferredCanvasFormat();return s.configure({alphaMode:"premultiplied",device:u,format:d}),{device:u,canvas:a,format:d,context:s}},T=(e,t,r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const n=e.createBuffer({size:t.byteLength,usage:r,mappedAtCreation:!0});return r===GPUBufferUsage.VERTEX?new Float32Array(n.getMappedRange()).set(t):new Uint32Array(n.getMappedRange()).set(t),n.unmap(),n},b="//vertex shader\r\nstruct Ouput{\r\n    @builtin(position) Position: vec4<f32>,\r\n    @location(0) vColor : vec4<f32>\r\n};\r\n\r\n@vertex\r\nfn vs_main(@location(1) pos: vec4<f32>, @location(2) col: vec4<f32>) -> Ouput{\r\n    var position = pos;\r\n    var color = col;\r\n\r\n    var output: Ouput;\r\n    output.Position = position;\r\n    output.vColor = color;\r\n    return output;\r\n}\r\n\r\n//fragment shader\r\n@fragment\r\nfn fs_main(@location(0) vColor:vec4<f32>) -> @location(0) vec4<f32>{\r\n    return vColor;\r\n}",y="// vertex shader\n\nstruct Uniforms {\n    mvpMatrix : mat4x4<f32>\n};\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vColor : vec4<f32>\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n    var output: Output;\n    output.Position = uniforms.mvpMatrix * pos;\n    output.vColor = color;\n    return output;\n}\n\n// fragment shader\n\n @fragment\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n    return vColor;\n}",R=async()=>{const e=await x(),t=e.device,r=new Float32Array(a),n=T(t,r,GPUBufferUsage.VERTEX),o=new Uint32Array(i),u=o.length,s=T(t,o,GPUBufferUsage.INDEX),l=t.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{type:"uniform"}}]});let c=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:y}),entryPoint:"vs_main",buffers:[{arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}]},fragment:{module:t.createShaderModule({code:y}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:t.createPipelineLayout({bindGroupLayouts:[l]})});const d=t.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),g=t.createBindGroup({layout:c.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:d,offset:0,size:64}}]}),h=f(),E=f();let _=f();_=m(e.canvas.width/e.canvas.height).viewProjectionMatrix,p(h,[0,0,-2],[2.44,-.46,0]),v(E,_,h),t.queue.writeBuffer(d,0,E);const A=t.createCommandEncoder(),b=e.context.getCurrentTexture().createView(),R=t.createTexture({size:[e.canvas.width,e.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),w=A.beginRenderPass({colorAttachments:[{view:b,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:R.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}});w.setPipeline(c),w.setVertexBuffer(0,n),w.setIndexBuffer(s,"uint32"),w.setBindGroup(0,g),w.drawIndexed(u),w.end(),t.queue.submit([A.finish()])},w="#version 300 es\nin vec4 a_position;\nin vec4 a_color;\nuniform mat4 u_matrix;\nout vec4 out_color;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    out_color = a_color;\n}\n",P="#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n",B=(e,t,r,n)=>{const o=e.createBuffer();return e.bindBuffer(r,o),e.bufferData(r,r===e.ARRAY_BUFFER?new Float32Array(t):new Uint16Array(t),n),o},U=(e,t,r,n,o,a,i,u)=>{const s=e.getAttribLocation(t,r);e.vertexAttribPointer(s,n,o,a,i,u),e.enableVertexAttribArray(s)},S="// vertex shader\n\nstruct Uniforms {\n    mvpMatrix : mat4x4<f32>\n};\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vColor : vec4<f32>\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n    var output: Output;\n    output.Position = uniforms.mvpMatrix * pos;\n    output.vColor = color;\n    return output;\n}\n\n// fragment shader\n\n @fragment\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n    return vColor;\n}",F="// vertex shader\n\nstruct Uniforms {\n    mvpMatrix : mat4x4<f32>\n};\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vTextureCoord : vec2<f32>\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) textureCoord: vec2<f32>) -> Output {\n    var output: Output;\n    output.Position = uniforms.mvpMatrix * pos;\n    output.vTextureCoord = textureCoord;\n    return output;\n}\n\n// fragment shader\n@binding(1) @group(0) var textureSampler : sampler;\n@binding(2) @group(0) var textureData : texture_2d<f32>;\n @fragment\nfn fs_main(@location(0) vTextureCoord: vec2<f32>) -> @location(0) vec4<f32> {\n    let color: vec4<f32> = (textureSample(textureData, textureSampler, vTextureCoord)).rgba;\n    return color;\n}",C="// vertex shader\n\nstruct Uniforms {\n    mvpMatrix : mat4x4<f32>\n};\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vColor : vec4<f32>\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n    var output: Output;\n    output.Position = uniforms.mvpMatrix * pos;\n    output.vColor = color;\n    return output;\n}\n\n// fragment shader\n\n @fragment\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n    return vColor;\n}",L=e=>{const t=document.getElementById(e);null==t||t.childNodes.forEach((e=>{"CANVAS"===e.nodeName&&e.remove()}))},I=e=>{let t=!0;const r=document.getElementById(e);if(null==r||r.childNodes.forEach((e=>{"CANVAS"===e.nodeName&&(t=!1)})),t){const t=document.createElement("canvas");t.id="canvas-"+e,r.appendChild(t)}};[{webgl2Function:()=>{const e=document.getElementById("canvas-webGL2"),t=e.getContext("webgl2"),r=t.createShader(t.VERTEX_SHADER);t.shaderSource(r,"#version 300 es\nin vec4 a_position;\nout vec4 out_color;\n\nvoid main(){\n    gl_Position = a_position;\n    out_color = vec4(1.0, 0.0, 0.0, 1.0);\n}\n"),t.compileShader(r);let n=t.getShaderParameter(r,t.COMPILE_STATUS);n||console.log(t.getShaderInfoLog(r));const o=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(o,"#version 300 es\nprecision highp float;\nin vec4 out_color;\nout vec4 outColor;\n\nvoid main(){\n    outColor = out_color;\n}\n"),t.compileShader(o),n=t.getShaderParameter(o,t.COMPILE_STATUS),n||console.log(t.getShaderInfoLog(o));const a=t.createProgram();t.attachShader(a,r),t.attachShader(a,o),t.linkProgram(a),n=t.getProgramParameter(a,t.LINK_STATUS),n||console.log(t.getProgramInfoLog(a));const i=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,new Float32Array([-.5,-.5,0,.5,.5,-.5]),t.STATIC_DRAW);const u=t.getAttribLocation(a,"a_position"),s=t.createVertexArray();t.bindVertexArray(s),t.enableVertexAttribArray(u);const l=t.FLOAT;t.vertexAttribPointer(u,2,l,!1,0,0);const c=e.clientWidth,d=e.clientHeight;(e.width!==c||e.height!==d)&&(e.width=c,e.height=d),t.viewport(0,0,t.canvas.width,t.canvas.height),t.clearColor(1,1,1,1),t.clear(t.COLOR_BUFFER_BIT),t.useProgram(a);const f=t.TRIANGLES;t.drawArrays(f,0,3)},webgpuFunction:async()=>{var t;if(!navigator.gpu){const e=document.getElementById("webGPU");e&&(e.innerHTML="<h2>Your browser does not support WebGPU!<h2>")}const r=document.getElementById("canvas-webGPU"),n=await(null===(t=navigator.gpu)||void 0===t?void 0:t.requestAdapter()),o=await(null==n?void 0:n.requestDevice()),a=r.getContext("webgpu");a.configure({alphaMode:"premultiplied",device:o,format:await navigator.gpu.getPreferredCanvasFormat()});const i=r.clientWidth,u=r.clientHeight;(r.width!==i||r.height!==u)&&(r.width=i,r.height=u);const s=new Float32Array([-.5,-.5,0,.5,.5,-.5]),l=o.createBuffer({size:s.byteLength,usage:GPUBufferUsage.VERTEX,mappedAtCreation:!0});let c;new Float32Array(l.getMappedRange()).set(s),l.unmap(),c=o.createRenderPipeline({vertex:{module:o.createShaderModule({code:e}),entryPoint:"vs_main",buffers:[{arrayStride:8,attributes:[{shaderLocation:0,format:"float32x2",offset:0}]}]},fragment:{module:o.createShaderModule({code:e}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},layout:o.createPipelineLayout({bindGroupLayouts:[]})});const d=o.createCommandEncoder(),f=a.getCurrentTexture().createView(),v=d.beginRenderPass({colorAttachments:[{view:f,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}]});v.setPipeline(c),v.setVertexBuffer(0,l),v.draw(3,1,0,0),v.end(),o.queue.submit([d.finish()])},idPrefix:"triangle"},{webgl2Function:()=>{const e=t(),a=e[0],i=e[1],u=r(a,a.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec4 a_color; \nout vec4 out_color;\nvoid main(){\n    gl_Position = a_position;\n    out_color = a_color;\n}\n"),s=r(a,a.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n"),l=n(a,s,u),c=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,c),a.bufferData(a.ARRAY_BUFFER,new Float32Array([-.5,-.5,1,0,0,-.5,.5,0,1,0,.5,-.5,0,1,0,-.5,.5,0,1,0,.5,-.5,0,1,0,.5,.5,1,0,0]),a.STATIC_DRAW);const d=a.getAttribLocation(l,"a_position"),f=a.getAttribLocation(l,"a_color"),v=a.createVertexArray();a.bindVertexArray(v),a.enableVertexAttribArray(d);let m=2,p=a.FLOAT,g=!1,h=20,E=0;a.vertexAttribPointer(d,m,p,g,h,E),a.enableVertexAttribArray(d),m=3,p=a.FLOAT,g=!1,h=20,E=8,a.vertexAttribPointer(f,m,p,g,h,E),a.enableVertexAttribArray(f),o(i),a.viewport(0,0,a.canvas.width,a.canvas.height),a.clearColor(1,1,1,1),a.clear(a.COLOR_BUFFER_BIT),a.useProgram(l);const _=a.TRIANGLES;a.drawArrays(_,0,6)},webgpuFunction:async()=>{const e=await x(),t=e.device,r=e.context,n=new Float32Array([-.5,-.5,0,0,1,-.5,.5,0,1,0,.5,-.5,0,1,0,-.5,.5,0,1,0,.5,-.5,0,1,0,.5,.5,0,0,1]),o=T(t,n,GPUBufferUsage.VERTEX);let a=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:A}),entryPoint:"vs_main",buffers:[{arrayStride:20,attributes:[{shaderLocation:1,format:"float32x2",offset:0},{shaderLocation:2,format:"float32x3",offset:8}]}]},fragment:{module:t.createShaderModule({code:A}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},layout:t.createPipelineLayout({bindGroupLayouts:[]})});const i=t.createCommandEncoder(),u=r.getCurrentTexture().createView(),s=i.beginRenderPass({colorAttachments:[{view:u,clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}]});s.setPipeline(a),s.setVertexBuffer(0,o),s.draw(6,1,0,0),s.end(),t.queue.submit([i.finish()])},idPrefix:"square"},{webgl2Function:()=>{const e=t(),a=e[0],i=e[1],u=r(a,a.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec4 a_color;\nout vec4 out_color;\nvoid main(){\n    gl_Position = a_position;\n    out_color = a_color;\n}\n"),s=r(a,a.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n"),l=n(a,s,u),c=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,c),a.bufferData(a.ARRAY_BUFFER,new Float32Array([-.5,-.5,1,0,0,-.5,.5,0,0,1,.5,-.5,0,0,1,.5,.5,1,0,0]),a.STATIC_DRAW);const d=a.getAttribLocation(l,"a_position"),f=a.getAttribLocation(l,"a_color"),v=a.createVertexArray();a.bindVertexArray(v),a.enableVertexAttribArray(d);let m=2,p=a.FLOAT,g=!1,h=20,E=0;a.vertexAttribPointer(d,m,p,g,h,E),a.enableVertexAttribArray(d),m=3,p=a.FLOAT,g=!1,h=20,E=8,a.vertexAttribPointer(f,m,p,g,h,E),a.enableVertexAttribArray(f);const _=a.createBuffer();a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,_),a.bufferData(a.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,3,1,2]),a.STATIC_DRAW),o(i),a.viewport(0,0,a.canvas.width,a.canvas.height),a.clearColor(1,1,1,1),a.clear(a.COLOR_BUFFER_BIT),a.useProgram(l);const A=a.TRIANGLES;let x=a.UNSIGNED_SHORT;a.drawElements(A,6,x,0)},webgpuFunction:async()=>{const e=await x(),t=e.device,r=e.context,n=new Float32Array([-.5,-.5,0,0,1,-.5,.5,1,0,0,.5,-.5,1,0,0,.5,.5,0,0,1]),o=T(t,n,GPUBufferUsage.VERTEX),a=new Uint32Array([0,1,2,3,2,1]),i=t.createBuffer({size:a.byteLength,usage:GPUBufferUsage.INDEX,mappedAtCreation:!0});new Uint32Array(i.getMappedRange()).set(a),i.unmap();let u=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:b}),entryPoint:"vs_main",buffers:[{arrayStride:20,attributes:[{shaderLocation:1,format:"float32x2",offset:0},{shaderLocation:2,format:"float32x3",offset:8}]}]},fragment:{module:t.createShaderModule({code:b}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},layout:t.createPipelineLayout({bindGroupLayouts:[]})});const s=t.createCommandEncoder(),l=r.getCurrentTexture().createView(),c=s.beginRenderPass({colorAttachments:[{view:l,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}]});c.setPipeline(u),c.setVertexBuffer(0,o),c.setIndexBuffer(i,"uint32"),c.drawIndexed(6,1,0,0),c.end(),t.queue.submit([s.finish()])},idPrefix:"square-with-indexed-vertices"},{webgl2Function:R,webgpuFunction:R,idPrefix:"cube-with-distinct-vertex-colors"},{webgl2Function:()=>{const e=t(),a=e[0],i=e[1],s=r(a,a.VERTEX_SHADER,w),c=r(a,a.FRAGMENT_SHADER,P),d=n(a,c,s);a.useProgram(d);const g=a.createVertexArray();a.bindVertexArray(g);const h=u;B(a,h,a.ARRAY_BUFFER,a.STATIC_DRAW),U(a,d,"a_position",3,a.FLOAT,!1,12,0),B(a,l,a.ARRAY_BUFFER,a.STATIC_DRAW),U(a,d,"a_color",3,a.FLOAT,!1,12,0),o(i);const E=f(),_=f();let A=f();A=m(i.width/i.height).viewProjectionMatrix,p(E,[0,0,-2],[-2.44,.46,0]),v(_,A,E);const x=a.getUniformLocation(d,"u_matrix");a.uniformMatrix4fv(x,!1,_),a.viewport(0,0,a.canvas.width,a.canvas.height),a.clearColor(1,1,1,1),a.enable(a.DEPTH_TEST),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT);const T=a.TRIANGLES;a.drawArrays(T,0,h.length)},webgpuFunction:async()=>{const e=await x(),t=e.device,r=new Float32Array(u),n=new Float32Array(l),o=T(t,r,GPUBufferUsage.VERTEX),a=T(t,n,GPUBufferUsage.VERTEX),i=r.length,s=t.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{type:"uniform"}}]});let c=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:S}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:t.createShaderModule({code:S}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:t.createPipelineLayout({bindGroupLayouts:[s]})});const d=t.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),g=t.createBindGroup({layout:c.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:d,offset:0,size:64}}]}),h=f(),E=f();let _=f();_=m(e.canvas.width/e.canvas.height).viewProjectionMatrix,p(h,[0,0,-2],[2.44,-.46,0]),v(E,_,h),t.queue.writeBuffer(d,0,E);const A=t.createCommandEncoder(),b=e.context.getCurrentTexture().createView(),y=t.createTexture({size:[e.canvas.width,e.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),R=A.beginRenderPass({colorAttachments:[{view:b,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:y.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}});R.setPipeline(c),R.setVertexBuffer(0,o),R.setVertexBuffer(1,a),R.setBindGroup(0,g),R.draw(i/3),R.end(),t.queue.submit([A.finish()])},idPrefix:"cube-with-distinct-face-colors"},{webgl2Function:()=>{const e=t(),a=e[0],i=e[1],l=r(a,a.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec2 a_texcoord;\nuniform mat4 u_matrix;\n\nout vec2 v_texcoord;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    v_texcoord = a_texcoord;\n}\n"),c=r(a,a.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec2 v_texcoord;\nout vec4 outColor;\n\nuniform sampler2D u_texture;\nvoid main(){\n    outColor = texture(u_texture, v_texcoord);\n}\n"),d=n(a,c,l);a.useProgram(d);const g=a.createVertexArray();a.bindVertexArray(g);const h=u;B(a,h,a.ARRAY_BUFFER,a.STATIC_DRAW),U(a,d,"a_position",3,a.FLOAT,!1,12,0),B(a,s,a.ARRAY_BUFFER,a.STATIC_DRAW),U(a,d,"a_texcoord",2,a.FLOAT,!0,0,0),o(i);const E=a.createTexture();a.activeTexture(a.TEXTURE0+0),a.bindTexture(a.TEXTURE_2D,E),a.texImage2D(a.TEXTURE_2D,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,new Uint8Array([0,255,0,255]));var _=new Image;_.crossOrigin="anonymous",_.src="./assets/webgl_single_texture.png",_.addEventListener("load",(function(){a.bindTexture(a.TEXTURE_2D,E),a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,_),a.generateMipmap(a.TEXTURE_2D)}));const A=f(),x=f();let T=f();T=m(i.width/i.height).viewProjectionMatrix,p(A,[0,0,-2],[-2.44,.46,0]),v(x,T,A);const b=a.getUniformLocation(d,"u_matrix");a.uniformMatrix4fv(b,!1,x);const y=()=>{a.viewport(0,0,a.canvas.width,a.canvas.height),a.clearColor(0,0,0,0),a.enable(a.DEPTH_TEST),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),a.enable(a.CULL_FACE);const e=a.TRIANGLES;a.drawArrays(e,0,h.length),requestAnimationFrame(y)};requestAnimationFrame(y)},webgpuFunction:async()=>{const e=await x(),t=e.device,r=new Float32Array(u),n=new Float32Array(s),o=T(t,r,GPUBufferUsage.VERTEX),a=T(t,n,GPUBufferUsage.VERTEX),i=r.length,l=new Image;l.src="./assets/webgpu_single_texture.png",await l.decode();const c=await createImageBitmap(l),d=t.createTexture({size:[c.width,c.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),g=t.createSampler({minFilter:"linear",magFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"});t.queue.copyExternalImageToTexture({source:c},{texture:d},[c.width,c.height]);let h=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:F}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:8,attributes:[{shaderLocation:1,format:"float32x2",offset:0}]}]},fragment:{module:t.createShaderModule({code:F}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:"auto"});const E=t.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),_=t.createBindGroup({layout:h.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:E,offset:0,size:64}},{binding:1,resource:g},{binding:2,resource:d.createView()}]}),A=f(),b=f();let y=f();y=m(e.canvas.width/e.canvas.height).viewProjectionMatrix,p(A,[0,0,-2],[2.44,-.46,0]),v(b,y,A),t.queue.writeBuffer(E,0,b);const R=t.createCommandEncoder(),w=e.context.getCurrentTexture().createView(),P=t.createTexture({size:[e.canvas.width,e.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),B=R.beginRenderPass({colorAttachments:[{view:w,clearValue:{r:1,g:1,b:1,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:P.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}});B.setPipeline(h),B.setVertexBuffer(0,o),B.setVertexBuffer(1,a),B.setBindGroup(0,_),B.draw(i/3),B.end(),t.queue.submit([R.finish()])},idPrefix:"cube-with-texture"},{webgl2Function:()=>{var e,c,d,g,h,E,_,A,x,T;const b=t(),y=b[0],R=b[1];let S,F,C,L,I;const G=y.createVertexArray();y.bindVertexArray(G);let M="texture";const O=()=>{switch(M){case"texture":S=r(y,y.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec2 a_texcoord;\nuniform mat4 u_matrix;\n\nout vec2 v_texcoord;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    v_texcoord = a_texcoord;\n}\n"),F=r(y,y.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec2 v_texcoord;\nout vec4 outColor;\n\nuniform sampler2D u_texture;\nvoid main(){\n    outColor = texture(u_texture, v_texcoord);\n}\n"),C=n(y,F,S),y.useProgram(C),I=u,L=I.length,B(y,I,y.ARRAY_BUFFER,y.STATIC_DRAW),U(y,C,"a_position",3,y.FLOAT,!1,12,0),B(y,s,y.ARRAY_BUFFER,y.STATIC_DRAW),U(y,C,"a_texcoord",2,y.FLOAT,!0,0,0);const e=y.createTexture();y.activeTexture(y.TEXTURE0+0),y.bindTexture(y.TEXTURE_2D,e),y.texImage2D(y.TEXTURE_2D,0,y.RGBA,1,1,0,y.RGBA,y.UNSIGNED_BYTE,new Uint8Array([0,255,0,255]));const t=new Image;t.crossOrigin="anonymous",t.src="./assets/webgl_single_texture.png",t.addEventListener("load",(function(){y.bindTexture(y.TEXTURE_2D,e),y.texImage2D(y.TEXTURE_2D,0,y.RGBA,y.RGBA,y.UNSIGNED_BYTE,t),y.generateMipmap(y.TEXTURE_2D),requestAnimationFrame(ee)}));break;case"distinct-vertex-colors":S=r(y,y.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec4 a_color;\nuniform mat4 u_matrix;\nout vec4 out_color;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    out_color = a_color;\n}\n"),F=r(y,y.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n"),C=n(y,F,S),y.useProgram(C),I=a,L=i.length,B(y,I,y.ARRAY_BUFFER,y.STATIC_DRAW),B(y,i,y.ELEMENT_ARRAY_BUFFER,y.STATIC_DRAW),U(y,C,"a_position",3,y.FLOAT,!1,24,0),U(y,C,"a_color",3,y.FLOAT,!1,24,12);break;case"distinct-face-colors":S=r(y,y.VERTEX_SHADER,w),F=r(y,y.FRAGMENT_SHADER,P),C=n(y,F,S),y.useProgram(C),L=u.length,B(y,u,y.ARRAY_BUFFER,y.STATIC_DRAW),U(y,C,"a_position",3,y.FLOAT,!1,12,0),B(y,l,y.ARRAY_BUFFER,y.STATIC_DRAW),U(y,C,"a_color",3,y.FLOAT,!1,12,0);break;default:return 0}};O(),o(R);const V=f(),D=f();let N=f();const X=m(R.width/R.height);N=X.viewProjectionMatrix;let H=0,Y=0,q=0,z=1,W=1,k=1,j=0,K=0,J=0;document.getElementById("controls-container").style.display="block",null===(e=document.getElementById("translate-x"))||void 0===e||e.addEventListener("input",(e=>{var t;H=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(c=document.getElementById("translate-y"))||void 0===c||c.addEventListener("input",(e=>{var t;Y=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(d=document.getElementById("translate-z"))||void 0===d||d.addEventListener("input",(e=>{var t;q=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(g=document.getElementById("scale-x"))||void 0===g||g.addEventListener("input",(e=>{var t;z=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(h=document.getElementById("scale-y"))||void 0===h||h.addEventListener("input",(e=>{var t;W=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(E=document.getElementById("scale-z"))||void 0===E||E.addEventListener("input",(e=>{var t;k=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(_=document.getElementById("rotate-x"))||void 0===_||_.addEventListener("input",(e=>{var t;j=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(A=document.getElementById("rotate-y"))||void 0===A||A.addEventListener("input",(e=>{var t;K=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(x=document.getElementById("rotate-z"))||void 0===x||x.addEventListener("input",(e=>{var t;J=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(T=document.getElementById("material"))||void 0===T||T.addEventListener("change",(e=>{var t;M=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value,O()})),window.addEventListener("resize",(()=>o(R)));let Q=document.createElement("div");Q=document.getElementById("fps");let Z=1;const $=[],ee=e=>{for(;$.length>0&&$[0]<=e-1e3;)$.shift();$.push(e),Z=$.length,Q.innerText=Z.toString(),p(V,[H,Y,q],[j,K,J],[z,W,k]),v(D,N,V);const t=y.getUniformLocation(C,"u_matrix");y.uniformMatrix4fv(t,!1,D),y.clearColor(0,0,0,0),y.clear(y.COLOR_BUFFER_BIT|y.DEPTH_BUFFER_BIT),y.viewport(0,0,y.canvas.width,y.canvas.height),y.enable(y.DEPTH_TEST),y.enable(y.CULL_FACE);const r=y.TRIANGLES;if("distinct-vertex-colors"==M){let e=y.UNSIGNED_SHORT;y.drawElements(r,L,e,0)}else y.drawArrays(r,0,L);requestAnimationFrame(ee)};requestAnimationFrame(ee)},webgpuFunction:async()=>{var e,t,r,n,o,c,d,g,h,E;const _=await x(),A="bgra8unorm",b=_.device;let R,w,P,B,U,C,L,I,G,M,O=0,V="texture";const D=b.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),N=async()=>{switch(V){case"texture":R=new Float32Array(u),w=new Float32Array(s),B=T(b,R,GPUBufferUsage.VERTEX),U=T(b,w,GPUBufferUsage.VERTEX),O=R.length/3;const e=new Image;e.src="./assets/webgpu_single_texture.png",await e.decode();const t=await createImageBitmap(e),r=b.createTexture({size:[t.width,t.height,1],format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT}),n=b.createSampler({minFilter:"linear",magFilter:"linear",addressModeU:"repeat",addressModeV:"repeat"});b.queue.copyExternalImageToTexture({source:t},{texture:r},[t.width,t.height]),G=b.createRenderPipeline({vertex:{module:b.createShaderModule({code:F}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:8,attributes:[{shaderLocation:1,format:"float32x2",offset:0}]}]},fragment:{module:b.createShaderModule({code:F}),entryPoint:"fs_main",targets:[{format:A}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:"auto"}),M=b.createBindGroup({layout:G.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:D,offset:0,size:64}},{binding:1,resource:n},{binding:2,resource:r.createView()}]});break;case"distinct-vertex-colors":R=new Float32Array(a),B=T(b,R,GPUBufferUsage.VERTEX),I=new Uint32Array(i),O=I.length,L=T(b,I,GPUBufferUsage.INDEX),G=b.createRenderPipeline({vertex:{module:b.createShaderModule({code:y}),entryPoint:"vs_main",buffers:[{arrayStride:24,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:12}]}]},fragment:{module:b.createShaderModule({code:y}),entryPoint:"fs_main",targets:[{format:A}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:"auto"}),M=b.createBindGroup({layout:G.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:D,offset:0,size:64}}]});break;case"distinct-face-colors":R=new Float32Array(u),P=new Float32Array(l),B=T(b,R,GPUBufferUsage.VERTEX),C=T(b,P,GPUBufferUsage.VERTEX),O=R.length/3,L=T(b,I,GPUBufferUsage.INDEX),G=b.createRenderPipeline({vertex:{module:b.createShaderModule({code:S}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:b.createShaderModule({code:S}),entryPoint:"fs_main",targets:[{format:A}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:"auto"}),M=b.createBindGroup({layout:G.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:D,offset:0,size:64}}]});break;default:return}};await N();let X=0,H=0,Y=0,q=1,z=1,W=1,k=0,j=0,K=0;null===(e=document.getElementById("translate-x"))||void 0===e||e.addEventListener("input",(e=>{var t;X=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(t=document.getElementById("translate-y"))||void 0===t||t.addEventListener("input",(e=>{var t;H=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(r=document.getElementById("translate-z"))||void 0===r||r.addEventListener("input",(e=>{var t;Y=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(n=document.getElementById("scale-x"))||void 0===n||n.addEventListener("input",(e=>{var t;q=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(o=document.getElementById("scale-y"))||void 0===o||o.addEventListener("input",(e=>{var t;z=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(c=document.getElementById("scale-z"))||void 0===c||c.addEventListener("input",(e=>{var t;W=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value})),null===(d=document.getElementById("rotate-x"))||void 0===d||d.addEventListener("input",(e=>{var t;k=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(g=document.getElementById("rotate-y"))||void 0===g||g.addEventListener("input",(e=>{var t;j=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(h=document.getElementById("rotate-z"))||void 0===h||h.addEventListener("input",(e=>{var t;K=(null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value)*(Math.PI/180)})),null===(E=document.getElementById("material"))||void 0===E||E.addEventListener("change",(async e=>{var t;V=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value,await N()}));let J=_.context.getCurrentTexture().createView();const Q=b.createTexture({size:[_.canvas.width,_.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),Z={colorAttachments:[{view:J,clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:Q.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}};let $=document.createElement("div");$=document.getElementById("fps");let ee=1;const te=[],re=e=>{for(;te.length>0&&te[0]<=e-1e3;)te.shift();te.push(e),ee=te.length,$.innerText=ee.toString(),J=_.context.getCurrentTexture().createView(),Z.colorAttachments[0].view=J;const t=b.createCommandEncoder(),r=t.beginRenderPass(Z),n=f(),o=f();let a=f();a=m(_.canvas.width/_.canvas.height).viewProjectionMatrix,p(n,[X,H,Y],[k,j,K],[q,z,W]),v(o,a,n),b.queue.writeBuffer(D,0,o),r.setPipeline(G),r.setVertexBuffer(0,B),"distinct-vertex-colors"===V?(r.setIndexBuffer(L,"uint32"),r.setBindGroup(0,M),r.drawIndexed(O)):("distinct-face-colors"===V?r.setVertexBuffer(1,C):r.setVertexBuffer(1,U),r.setBindGroup(0,M),r.draw(O)),r.end(),b.queue.submit([t.finish()]),requestAnimationFrame(re)};requestAnimationFrame(re)},idPrefix:"interactive-cube"},{webgl2Function:()=>{const e=t(),a=e[0],i=e[1],s=r(a,a.VERTEX_SHADER,"#version 300 es\nin vec4 a_position;\nin vec4 a_color;\nuniform mat4 u_matrix;\nout vec4 out_color;\nvoid main(){\n    gl_Position = u_matrix * a_position;\n    out_color = a_color;\n}\n"),c=r(a,a.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n\nin vec4 out_color;\nout vec4 outColor;\nvoid main(){\n    outColor = out_color;\n}\n"),d=n(a,c,s);a.useProgram(d);const E=a.createVertexArray();a.bindVertexArray(E);const A=u;B(a,A,a.ARRAY_BUFFER,a.STATIC_DRAW),U(a,d,"a_position",3,a.FLOAT,!1,12,0),B(a,l,a.ARRAY_BUFFER,a.STATIC_DRAW),U(a,d,"a_color",3,a.FLOAT,!1,12,0),o(i);let x=1,T=1;_.show(),_.add("range","rows",[1,100],1,(e=>x=e)),_.add("range","columns",[1,100],1,(e=>T=e));const b=f(),y=f();let R=f();const w=m(i.width/i.height,[0,25,50]);R=w.viewProjectionMatrix;const[P,S,F]=g(),C=e=>{a.viewport(0,0,a.canvas.width,a.canvas.height),a.enable(a.DEPTH_TEST),a.clearColor(0,0,0,0),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),h(e,F,S,P);for(let e=1;e<=x;e++)for(let t=-T/2;t<T/2;t++){p(b,[6*t,0,6*-e],[0,0,0]),v(y,R,b);const r=a.getUniformLocation(d,"u_matrix");a.uniformMatrix4fv(r,!1,y);const n=a.TRIANGLES,o=0;a.drawArrays(n,o,A.length)}requestAnimationFrame(C)};requestAnimationFrame(C)},webgpuFunction:async()=>{const e=await x(),t=e.device,r=new Float32Array(u),n=new Float32Array(l),o=T(t,r,GPUBufferUsage.VERTEX),a=T(t,n,GPUBufferUsage.VERTEX),i=r.length,s=t.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{type:"uniform"}}]});let c,d=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:C}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:t.createShaderModule({code:C}),entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},layout:t.createPipelineLayout({bindGroupLayouts:[s]})}),E=1,A=1,b=1,y=[];const R=()=>{y=[],b=E*A,c=t.createBuffer({size:64+320*b,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});for(let e=0;e<b;e++){const r=t.createBindGroup({layout:d.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:c,offset:256*e,size:64}}]});y.push(r)}console.log(y.length)};R();const w=f(),P=f();let B=f();const U=m(e.canvas.width/e.canvas.height,[0,25,50]);B=U.viewProjectionMatrix;const[S,F,L]=g(),I=r=>{h(r,L,F,S);const n=t.createCommandEncoder(),u=e.context.getCurrentTexture().createView(),s=t.createTexture({size:[e.canvas.width,e.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),l=n.beginRenderPass({colorAttachments:[{view:u,clearValue:{r:0,g:0,b:0,a:0},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:s.createView({aspect:"all"}),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store",depthReadOnly:!1}});l.setPipeline(d),l.setVertexBuffer(0,o),l.setVertexBuffer(1,a);let f=0;for(let e=1;e<=E;e++)for(let r=-A/2;r<A/2;r++)p(w,[6*r,0,6*-e],[0,Math.PI/2,0]),v(P,B,w),t.queue.writeBuffer(c,256*f,P),l.setBindGroup(0,y[f]),l.draw(i/3),f++;l.end(),t.queue.submit([n.finish()]),requestAnimationFrame(I)};_.show(),_.add("range","rows",[1,100],1,(e=>{E=e,R()})),_.add("range","columns",[1,100],1,(e=>{A=e,R()})),requestAnimationFrame(I)},idPrefix:"multiple-cubes"}].forEach((e=>{const t=document.getElementById("webGPUTab-"+e.idPrefix);null==t||t.addEventListener("click",(async()=>{L("webGL2"),I("webGPU"),await e.webgpuFunction()}));const r=document.getElementById("webGL2Tab-"+e.idPrefix);null==r||r.addEventListener("click",(async()=>{L("webGPU"),I("webGL2"),e.webgl2Function()})),null!==r&&e.webgl2Function()}))})();
//# sourceMappingURL=main.bundle.js.map